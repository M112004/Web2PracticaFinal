openapi: 3.0.0
info:
  title: API de Gestión de Clientes y Proyectos
  description: API para gestionar clientes, proyectos y albaranes de entrega
  version: 1.0.0
  contact:
    email: soporte@tuempresa.com

servers:
  - url: http://localhost:3000/api
    description: Servidor de desarrollo
  - url: https://api.tuempresa.com
    description: Servidor de producción

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        validated:
          type: boolean
        personal:
          type: object
          properties:
            nombre:
              type: string
            apellidos:
              type: string
            telefono:
              type: string
        company:
          type: object
          properties:
            nombre:
              type: string
            direccion:
              type: string
        role:
          type: string
          enum: [admin, user]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    
    Client:
      type: object
      properties:
        _id:
          type: string
          format: uuid
        name:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string
        address:
          type: string
        createdBy:
          type: string
          format: uuid
        company:
          type: string
          format: uuid
        isArchived:
          type: boolean
        archivedAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    
    Project:
      type: object
      properties:
        _id:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        client:
          type: string
          format: uuid
        createdBy:
          type: string
          format: uuid
        company:
          type: string
          format: uuid
        isArchived:
          type: boolean
        archivedAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    
    DeliveryNote:
      type: object
      properties:
        _id:
          type: string
          format: uuid
        project:
          type: string
          format: uuid
        createdBy:
          type: string
          format: uuid
        items:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                enum: [hours, material]
              description:
                type: string
              quantity:
                type: number
              unitPrice:
                type: number
              person:
                type: string
              hours:
                type: number
        isSigned:
          type: boolean
        signatureIpfs:
          type: string
        pdfIpfs:
          type: string
        createdAt:
          type: string
          format: date-time
    
    Error:
      type: object
      properties:
        status:
          type: string
        code:
          type: integer
        message:
          type: string
        errors:
          type: object

# Paths para Usuarios
paths:
  /users/register:
    post:
      summary: Registrar nuevo usuario
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                  minLength: 6
      responses:
        '201':
          description: Usuario registrado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '400':
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Email ya registrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /users/login:
    post:
      summary: Iniciar sesión
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Usuario autenticado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '400':
          description: Credenciales inválidas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Email no validado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /users/validation:
    put:
      summary: Validar email con código
      tags:
        - Users
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - code
              properties:
                code:
                  type: string
      responses:
        '200':
          description: Email validado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '400':
          description: Código inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/password-reset/request:
    post:
      summary: Solicitar restablecimiento de contraseña
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: Solicitud procesada correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
  
  /users/password-reset/reset:
    post:
      summary: Restablecer contraseña con token
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - token
                - newPassword
              properties:
                token:
                  type: string
                newPassword:
                  type: string
                  format: password
                  minLength: 6
      responses:
        '200':
          description: Contraseña restablecida correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '400':
          description: Token inválido o expirado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /users:
    put:
      summary: Actualizar datos personales
      tags:
        - Users
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                apellidos:
                  type: string
                telefono:
                  type: string
      responses:
        '200':
          description: Datos personales actualizados correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  personal:
                    type: object
        '401':
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /users/company:
    patch:
      summary: Actualizar datos de la compañía
      tags:
        - Users
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                direccion:
                  type: string
      responses:
        '200':
          description: Datos de la compañía actualizados correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  company:
                    type: object
        '401':
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /users/password:
    put:
      summary: Cambiar contraseña
      tags:
        - Users
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - currentPassword
                - newPassword
              properties:
                currentPassword:
                  type: string
                newPassword:
                  type: string
                  format: password
                  minLength: 6
      responses:
        '200':
          description: Contraseña actualizada correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '400':
          description: Contraseña actual incorrecta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /users/invite:
    post:
      summary: Invitar a un nuevo usuario
      tags:
        - Users
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
      responses:
        '201':
          description: Invitación enviada correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '400':
          description: Email ya registrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /users/invitation/accept:
    post:
      summary: Aceptar invitación
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - inviteCode
                - password
              properties:
                email:
                  type: string
                  format: email
                inviteCode:
                  type: string
                password:
                  type: string
                  format: password
                  minLength: 6
      responses:
        '200':
          description: Invitación aceptada correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  token:
                    type: string
        '400':
          description: Invitación inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /users/soft:
    delete:
      summary: Desactivar cuenta (soft delete)
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Usuario desactivado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '401':
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /users/hard:
    delete:
      summary: Eliminar cuenta permanentemente
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Usuario eliminado permanentemente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '401':
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /users/profile:
    get:
      summary: Obtener perfil del usuario
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Perfil de usuario
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

# Paths para Clientes
  /clients:
    post:
      summary: Crear nuevo cliente
      tags:
        - Clients
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                phone:
                  type: string
                address:
                  type: string
      responses:
        '201':
          description: Cliente creado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      client:
                        $ref: '#/components/schemas/Client'
        '400':
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Cliente ya existe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: Obtener todos los clientes no archivados
      tags:
        - Clients
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de clientes
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  results:
                    type: integer
                  data:
                    type: object
                    properties:
                      clients:
                        type: array
                        items:
                          $ref: '#/components/schemas/Client'
        '401':
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /clients/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    put:
      summary: Actualizar cliente
      tags:
        - Clients
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                phone:
                  type: string
                address:
                  type: string
      responses:
        '200':
          description: Cliente actualizado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      client:
                        $ref: '#/components/schemas/Client'
        '400':
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Cliente no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: Obtener cliente por ID
      tags:
        - Clients
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Cliente encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      client:
                        $ref: '#/components/schemas/Client'
        '404':
          description: Cliente no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Eliminar cliente permanentemente
      tags:
        - Clients
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Cliente eliminado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: null
        '404':
          description: Cliente no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /clients/{id}/archive:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    patch:
      summary: Archivar cliente (soft delete)
      tags:
        - Clients
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Cliente archivado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      client:
                        $ref: '#/components/schemas/Client'
        '404':
          description: Cliente no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /clients/archived/all:
    get:
      summary: Obtener todos los clientes archivados
      tags:
        - Clients
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de clientes archivados
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  results:
                    type: integer
                  data:
                    type: object
                    properties:
                      clients:
                        type: array
                        items:
                          $ref: '#/components/schemas/Client'
        '401':
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /clients/{id}/restore:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    patch:
      summary: Restaurar cliente archivado
      tags:
        - Clients
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Cliente restaurado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      client:
                        $ref: '#/components/schemas/Client'
        '404':
          description: Cliente no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

# Paths para Proyectos
  /projects:
    post:
      summary: Crear nuevo proyecto
      tags:
        - Projects
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - client
              properties:
                title:
                  type: string
                description:
                  type: string
                client:
                  type: string
                  format: uuid
      responses:
        '201':
          description: Proyecto creado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          description: Datos inválidos o proyecto ya existe
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    get:
      summary: Obtener todos los proyectos no archivados
      tags:
        - Projects
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de proyectos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
        '401':
          description: No autenticado
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  
  /projects/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    put:
      summary: Actualizar proyecto
      tags:
        - Projects
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                client:
                  type: string
                  format: uuid
      responses:
        '200':
          description: Proyecto actualizado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '404':
          description: Proyecto no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    get:
      summary: Obtener proyecto por ID
      tags:
        - Projects
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Proyecto encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '404':
          description: Proyecto no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    delete:
      summary: Eliminar proyecto permanentemente
      tags:
        - Projects
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Proyecto eliminado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '404':
          description: Proyecto no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  
  /projects/{id}/archive:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    patch:
      summary: Archivar proyecto (soft delete)
      tags:
        - Projects
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Proyecto archivado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  project:
                    $ref: '#/components/schemas/Project'
        '404':
          description: Proyecto no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  
  /projects/archived/all:
    get:
      summary: Obtener todos los proyectos archivados
      tags:
        - Projects
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de proyectos archivados
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
        '401':
          description: No autenticado
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  
  /projects/{id}/restore:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    patch:
      summary: Restaurar proyecto archivado
      tags:
        - Projects
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Proyecto restaurado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  project:
                    $ref: '#/components/schemas/Project'
        '404':
          description: Proyecto no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

# Paths para Albaranes
  /delivery-notes:
    post:
      summary: Crear nuevo albarán
      tags:
        - DeliveryNotes
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - project
                - items
              properties:
                project:
                  type: string
                  format: uuid
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - type
                    properties:
                      type:
                        type: string
                        enum: [hours, material]
                      description:
                        type: string
                      quantity:
                        type: number
                      unitPrice:
                        type: number
                      person:
                        type: string
                      hours:
                        type: number
      responses:
        '201':
          description: Albarán creado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryNote'
        '404':
          description: Proyecto no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    get:
      summary: Obtener todos los albaranes
      tags:
        - DeliveryNotes
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de albaranes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeliveryNote'
        '401':
          description: No autenticado
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  
  /delivery-notes/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Obtener albarán por ID
      tags:
        - DeliveryNotes
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Albarán encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryNote'
        '404':
          description: Albarán no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    delete:
      summary: Eliminar albarán
      tags:
        - DeliveryNotes
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Albarán eliminado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '400':
          description: No se puede borrar un albarán firmado
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Albarán no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  
  /delivery-notes/pdf/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Descargar PDF del albarán
      tags:
        - DeliveryNotes
      security:
        - bearerAuth: []
      responses:
        '200':
          description: PDF del albarán
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '404':
          description: Albarán no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  
  /delivery-notes/sign/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    post:
      summary: Firmar albarán
      tags:
        - DeliveryNotes
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - signature
              properties:
                signature:
                  type: string
                  format: binary
      responses:
        '200':
          description: Albarán firmado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  signatureUrl:
                    type: string
        '400':
          description: Error al firmar o ya está firmado
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Albarán no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string